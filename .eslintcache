[{"C:\\academy\\academyexcellenceweb\\src\\index.js":"1","C:\\academy\\academyexcellenceweb\\src\\App.js":"2","C:\\academy\\academyexcellenceweb\\src\\reportWebVitals.js":"3","C:\\academy\\academyexcellenceweb\\src\\aws-exports.js":"4","C:\\academy\\academyexcellenceweb\\src\\layout\\AppTheme.js":"5","C:\\academy\\academyexcellenceweb\\src\\layout\\Paperbase.js":"6","C:\\academy\\academyexcellenceweb\\src\\layout\\Navigator.js":"7","C:\\academy\\academyexcellenceweb\\src\\layout\\Content.js":"8","C:\\academy\\academyexcellenceweb\\src\\layout\\Header.js":"9","C:\\academy\\academyexcellenceweb\\src\\Question.js":"10","C:\\academy\\academyexcellenceweb\\src\\QuestionHeader.js":"11","C:\\academy\\academyexcellenceweb\\src\\DisplayStatus.js":"12","C:\\academy\\academyexcellenceweb\\src\\DisplayTimer.js":"13"},{"size":626,"mtime":1611479688819,"results":"14","hashOfConfig":"15"},{"size":540,"mtime":1611479688807,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1611479688831,"results":"17","hashOfConfig":"15"},{"size":487,"mtime":1611479688816,"results":"18","hashOfConfig":"15"},{"size":305,"mtime":1611479688821,"results":"19","hashOfConfig":"15"},{"size":5567,"mtime":1611727075223,"results":"20","hashOfConfig":"15"},{"size":5420,"mtime":1611727059855,"results":"21","hashOfConfig":"15"},{"size":3093,"mtime":1611727917439,"results":"22","hashOfConfig":"15"},{"size":4647,"mtime":1611479688824,"results":"23","hashOfConfig":"15"},{"size":6300,"mtime":1611479688812,"results":"24","hashOfConfig":"15"},{"size":12834,"mtime":1611812618672,"results":"25","hashOfConfig":"15"},{"size":5427,"mtime":1611479688809,"results":"26","hashOfConfig":"15"},{"size":1053,"mtime":1611479688810,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1arflji",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\academy\\academyexcellenceweb\\src\\index.js",[],["59","60"],"C:\\academy\\academyexcellenceweb\\src\\App.js",[],"C:\\academy\\academyexcellenceweb\\src\\reportWebVitals.js",[],"C:\\academy\\academyexcellenceweb\\src\\aws-exports.js",[],"C:\\academy\\academyexcellenceweb\\src\\layout\\AppTheme.js",[],"C:\\academy\\academyexcellenceweb\\src\\layout\\Paperbase.js",["61","62"],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Navigator from './Navigator';\r\nimport Content from './Content';\r\nimport Header from './Header';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}.\r\n    </Typography>\r\n  );\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#63ccff',\r\n      main: '#009be5',\r\n      dark: '#006db3',\r\n    },\r\n  },\r\n  typography: {\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 26,\r\n      letterSpacing: 0.5,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  components: {\r\n    MuiTab: {\r\n      defaultProps: {\r\n        disableRipple: true,\r\n      },\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  components: {\r\n    MuiDrawer: {\r\n      styleOverrides: {\r\n        paper: {\r\n          backgroundColor: '#18202c',\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        label: {\r\n          textTransform: 'none',\r\n        },\r\n        contained: {\r\n          boxShadow: 'none',\r\n          '&:active': {\r\n            boxShadow: 'none',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      styleOverrides: {\r\n        root: {\r\n          marginLeft: theme.spacing(1),\r\n        },\r\n        indicator: {\r\n          height: 3,\r\n          borderTopLeftRadius: 3,\r\n          borderTopRightRadius: 3,\r\n          backgroundColor: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n    MuiTab: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'none',\r\n          margin: '0 16px',\r\n          minWidth: 0,\r\n          padding: 0,\r\n          [theme.breakpoints.up('md')]: {\r\n            padding: 0,\r\n            minWidth: 0,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          padding: theme.spacing(1),\r\n        },\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      styleOverrides: {\r\n        tooltip: {\r\n          borderRadius: 4,\r\n        },\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#404854',\r\n        },\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      styleOverrides: {\r\n        primary: {\r\n          fontWeight: theme.typography.fontWeightMedium,\r\n        },\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: 'inherit',\r\n          marginRight: 0,\r\n          '& svg': {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      styleOverrides: {\r\n        root: {\r\n          width: 32,\r\n          height: 32,\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 150;\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  app: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    padding: theme.spacing(6, 4),\r\n    background: '#eaeff1',\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(2),\r\n    background: '#eaeff1',\r\n  },\r\n};\r\n\r\nfunction Paperbase(props) {\r\n  const { classes } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [headerPopulated, setHeaderPopulated] = React.useState(false);\r\n  const [selectedClass,setSelectedClass] = React.useState(\"\");\r\n  const [selectedLeftNavigation,setSelectedLeftNavigation] = React.useState(\"WBBSE\");\r\n  const [selectedLeftNavigationDescription,setSelectedLeftNavigationDescription] = React.useState(\"West Bengal Board of Secondary Education\");\r\n  const [selectHeaderName, setSelectHeaderName] = React.useState('');\r\n\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const setNavigation = (navigation,headerName,navigationDescription) => {\r\n    setSelectedLeftNavigation(navigation);\r\n    setSelectHeaderName(headerName);\r\n    setSelectedLeftNavigationDescription(navigationDescription);\r\n  }\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <nav className={classes.drawer}>\r\n          <Hidden smDown implementation=\"css\">\r\n            <Navigator PaperProps={{ style: { width: drawerWidth } }} setNavigation = {setNavigation}/>\r\n          </Hidden>\r\n        </nav>\r\n        <div className={classes.app}>\r\n          <Header onDrawerToggle={handleDrawerToggle}  selectedLeftNavigation = {selectedLeftNavigationDescription} />\r\n          <main className={classes.main}>\r\n            <Content boardHeaderName={selectHeaderName} headerPopulated = {headerPopulated} selectedBoard = {selectedLeftNavigation}  selectedClass = {selectedClass}/>\r\n          </main>\r\n          <footer className={classes.footer}>\r\n            <Copyright />\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nPaperbase.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Paperbase);\r\n","C:\\academy\\academyexcellenceweb\\src\\layout\\Navigator.js",["63","64","65","66","67","68","69","70"],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nconst categories = [\r\n  {\r\n    categoryId: 'AcademyBoard',\r\n    categoryDescription: 'Academy Board',\r\n    subCategoryList: [\r\n      {\r\n\r\n        subCategoryId: 'WBBSE',\r\n        subCategory:'WBBSE',\r\n        subCategoryDescription: 'West Bengal Board of Secondary Education',\r\n        active:true\r\n      },\r\n      {\r\n        subCategoryId: 'CBSE',\r\n        subCategory:'CBSE',\r\n        subCategoryDescription: 'Central Board of Secondary Education',\r\n      },\r\n      {\r\n        subCategoryId: 'ICSE',\r\n        subCategory:'ICSE',\r\n        subCategoryDescription: 'Indian Certificate of Secondary Education',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    categoryId: 'Olympiad',\r\n    categoryDescription: 'Olympiad',\r\n    subCategoryList: [\r\n      {\r\n        subCategoryId: 'Olympiad_Mathmatics',\r\n        subCategory:'Mathmatics',\r\n        subCategoryDescription: 'Olympiad - Mathmatics',\r\n      },\r\n      {\r\n        subCategoryId: 'Olympiad_Science',\r\n        subCategory:'Science',\r\n        subCategoryDescription: 'Olympiad - Science',\r\n      },\r\n      {\r\n        subCategoryId: 'Olympiad_Computer',\r\n        subCategory:'Computer',\r\n        subCategoryDescription: 'Olympiad - Computer',\r\n      },\r\n    ],\r\n  }\r\n];\r\n\r\nconst styles = (theme) => ({\r\n  categoryHeader: {\r\n    backgroundColor: '#232f3e',\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  item: {\r\n    backgroundColor: '#232f3e',\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    '&:hover, &:focus': {\r\n      backgroundColor: '#232f3e',\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: '#232f3e',\r\n    boxShadow: '0 -1px 0 #404854 inset',\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemActiveItem: {\r\n\r\n    color: '#4fc3f7',\r\n  },\r\n  itemPrimary: {\r\n    fontSize: 'inherit',\r\n  },\r\n  itemIcon: {\r\n    minWidth: 'auto',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction Navigator(props) {\r\n  const { classes, ...other } = props;\r\n  const [activeLink, setActiveLink] = React.useState(\"WBBSE\");\r\n  const setLeftNavigation = (parentId, childId) => {\r\n  for(var header in categories) {\r\n       if(categories[header].categoryId === parentId){\r\n         for(var child in categories[header].subCategoryList) {\r\n           if (categories[header].subCategoryList[child].subCategoryId === childId){\r\n             categories[header].subCategoryList[child].active = true;\r\n             setActiveLink(childId);\r\n             props.setNavigation(childId,parentId,categories[header].subCategoryList[child].subCategoryDescription);\r\n           }else {\r\n             categories[header].subCategoryList[child].active = false;\r\n           }\r\n       }\r\n    }\r\n  }\r\n}\r\n  return (\r\n    <>\r\n    <Drawer variant=\"permanent\" {...other}>\r\n      <List disablePadding>\r\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n          Academy\r\n        </ListItem>\r\n        {categories.map(({ categoryId, categoryDescription,subCategoryList }) => (\r\n          <React.Fragment key={categoryId}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                {categoryDescription}\r\n              </ListItemText>\r\n            </ListItem>\r\n            {subCategoryList.map(({ subCategoryId,subCategory,active }) => (\r\n              <ListItem\r\n                key={subCategoryId}\r\n                button\r\n                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n              >\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                <Link color=\"inherit\"\r\n                    onClick={() => {\r\n                      setLeftNavigation(categoryId,subCategoryId);\r\n                }}>\r\n                {subCategory}</Link>\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nNavigator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);\r\n","C:\\academy\\academyexcellenceweb\\src\\layout\\Content.js",[],"C:\\academy\\academyexcellenceweb\\src\\layout\\Header.js",["71","72","73","74","75","76","77","78"],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = (theme) => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const { classes, onDrawerToggle } = props;\r\n  const [loaded, setLoaded] = React.useState(false);\r\n  const [classList, setClassList] = React.useState([]);\r\n  const [selectedClass, setSelectedClass] = React.useState(\"\");\r\n  const loading = loaded && classList.length === 0;\r\n\r\n  function sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, delay);\r\n    });\r\n  }\r\n  React.useEffect(() => {\r\n  (async () => {\r\n    if(classList != null && classList.length === 0){\r\n    const response = await fetch('https://pznmdvakt6.execute-api.ap-south-1.amazonaws.com/dev/getClassList?board=1');\r\n    await sleep(1e3);\r\n    const classListData = await response.json();\r\n    if (classListData.length > 0){\r\n      setClassList(classListData);\r\n    }\r\n  }})();\r\n}, [loading]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onDrawerToggle}\r\n                  edge=\"start\"\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Tooltip title=\"Alerts â¢ No alerts\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs alignItems=\"center\">\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                {props.selectedLeftNavigation}\r\n              </Typography>\r\n              <Typography color=\"inherit\" variant=\"h6\" component=\"h1\">\r\n\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Tooltip title=\"Help\">\r\n                <IconButton color=\"inherit\">\r\n                  <HelpIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Tabs value={0} textColor=\"inherit\">\r\n          <Tab label=\"Knowledge Test\" />\r\n          <Tab label=\"Study Material\" />\r\n        </Tabs>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","C:\\academy\\academyexcellenceweb\\src\\Question.js",["79"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport DisplayStatus from './DisplayStatus.js';\r\nimport DisplayTimer from './DisplayTimer.js';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1, 1, 0, 0),\r\n  },\r\n  root: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function Question(props) {\r\n  const [progress, setProgress] = React.useState(0);\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('');\r\n  const [error, setError] = React.useState(false);\r\n  const [helperText, setHelperText] = React.useState('Choose wisely');\r\n  const [questionIndex, setQuestionIndex] = React.useState(0);\r\n  const [questionAnswer,setQuestionAnswer] = React.useState(['']);\r\n  const [questionDetails, setQuestionDetails] = React.useState([]);\r\n  const [isLoaded, setIsLoaded] = React.useState(false);\r\n  const [examCompleted,setExamCompleted] = React.useState(false);\r\n\r\n  const populateExamCompleteStatus =  (examStatus) => {\r\n     setExamCompleted(examStatus);\r\n     showAnswerStatus(questionAnswer[questionIndex]);\r\n  }\r\n  const startNewExam = () => {\r\n    props.startNewExam();\r\n  }\r\n\r\nReact.useEffect(() => {\r\n  fetch(\"https://pznmdvakt6.execute-api.ap-south-1.amazonaws.com/dev/getQuestionSet?questionSet=\" + props.questionSet)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        setQuestionDetails(result.questionList);\r\n        setIsLoaded(true);\r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => {\r\n        setIsLoaded(false);\r\n        alert(error);\r\n        alert(\"https://pznmdvakt6.execute-api.ap-south-1.amazonaws.com/dev/getQuestionSet?questionSet=\" + props.questionSet);\r\n      }\r\n    )\r\n},[])\r\n\r\n\r\n  const prevNextQuestion = (event, newValue) => {\r\n    var curIndex = questionIndex;\r\n      if (newValue === 'next') {\r\n        if (questionIndex + 1 < questionDetails.length){\r\n          setQuestionIndex(questionIndex + 1);\r\n          curIndex = questionIndex + 1;\r\n        }\r\n      }\r\n      if (newValue === 'previous') {\r\n        if (questionIndex > 0){\r\n          setQuestionIndex(questionIndex - 1);\r\n          curIndex = questionIndex - 1;\r\n        }\r\n      }\r\n      if (questionAnswer.length === questionIndex) {\r\n        questionAnswer[questionIndex] = '';\r\n      }\r\n      if(examCompleted){\r\n      showAnswerStatus(questionAnswer[curIndex]);\r\n    }\r\n    };\r\n\r\n  const selectAnswer = (event) => {\r\n    setValue(event.target.value);\r\n    setHelperText(' ');\r\n    setError(false);\r\n    questionAnswer[questionIndex] = event.target.value;\r\n    setQuestionAnswer(questionAnswer)\r\n    var answered = 0;\r\n    for (var i = 0; i<questionAnswer.length ; i++){\r\n      if (questionAnswer[i] !== ''){\r\n        answered = answered + 1;\r\n      }\r\n    }\r\n    setProgress((answered/questionDetails.length)*100);\r\n\r\n  };\r\n\r\n  const showAnswerStatus = (value) => {\r\n    if (value === 'Y') {\r\n      setHelperText('Correct!');\r\n      setError(false);\r\n    } else if (value === 'N') {\r\n      setHelperText('Sorry, wrong answer!');\r\n      setError(true);\r\n    } else {\r\n      setHelperText('Please select an option.');\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  if (!isLoaded) {\r\n       return <div>Loading...</div>;\r\n     } else {\r\n    return (\r\n    <div className={classes.root}>\r\n    <DisplayTimer totalQuestion = {questionDetails.length}/>\r\n    <LinearProgressWithLabel value={progress} />\r\n    <form>\r\n      <FormControl component=\"fieldset\" error={error} className={classes.formControl}>\r\n        <FormLabel component=\"legend\">Q{questionIndex + 1}. {questionDetails[questionIndex].question}</FormLabel>\r\n        <RadioGroup  aria-label=\"quiz\" name=\"quiz\" value={questionAnswer[questionIndex]} onChange={selectAnswer}>\r\n        {questionDetails[questionIndex].options.map(({ id, correct,option }) => (\r\n        <React.Fragment key={id}>\r\n          <FormControlLabel value={correct} control={<Radio disabled = {examCompleted}/>} label={option} />\r\n          </React.Fragment>\r\n        ))}\r\n        </RadioGroup>\r\n        <FormHelperText>{helperText}</FormHelperText>\r\n        <DisplayStatus startNewExam = {startNewExam} questionList = {questionDetails} currentIndex = {questionIndex} questionAnswer = {questionAnswer} setExamStatus = {populateExamCompleteStatus}/>\r\n      </FormControl>\r\n\r\n    </form>\r\n    <BottomNavigation value={value} onChange={prevNextQuestion} className={classes.root} showLabels>\r\n        <BottomNavigationAction label=\"Previous\" value=\"previous\" icon={<ArrowBackIosIcon />}/>\r\n        <BottomNavigationAction label=\"Next\" value=\"next\" icon={<ArrowForwardIosIcon />} />\r\n      </BottomNavigation>\r\n    </div>\r\n  );\r\n}\r\n}\r\n","C:\\academy\\academyexcellenceweb\\src\\QuestionHeader.js",["80","81","82","83","84","85","86","87"],"C:\\academy\\academyexcellenceweb\\src\\DisplayStatus.js",[],"C:\\academy\\academyexcellenceweb\\src\\DisplayTimer.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":188,"column":27,"nodeType":"94","messageId":"95","endLine":188,"endColumn":45},{"ruleId":"92","severity":1,"message":"96","line":189,"column":24,"nodeType":"94","messageId":"95","endLine":189,"endColumn":40},{"ruleId":"92","severity":1,"message":"97","line":9,"column":8,"nodeType":"94","messageId":"95","endLine":9,"endColumn":20},{"ruleId":"92","severity":1,"message":"98","line":11,"column":8,"nodeType":"94","messageId":"95","endLine":11,"endColumn":16},{"ruleId":"92","severity":1,"message":"99","line":12,"column":8,"nodeType":"94","messageId":"95","endLine":12,"endColumn":18},{"ruleId":"92","severity":1,"message":"100","line":13,"column":8,"nodeType":"94","messageId":"95","endLine":13,"endColumn":22},{"ruleId":"92","severity":1,"message":"101","line":14,"column":8,"nodeType":"94","messageId":"95","endLine":14,"endColumn":29},{"ruleId":"92","severity":1,"message":"102","line":15,"column":8,"nodeType":"94","messageId":"95","endLine":15,"endColumn":17},{"ruleId":"92","severity":1,"message":"103","line":16,"column":8,"nodeType":"94","messageId":"95","endLine":16,"endColumn":20},{"ruleId":"92","severity":1,"message":"104","line":113,"column":10,"nodeType":"94","messageId":"95","endLine":113,"endColumn":20},{"ruleId":"92","severity":1,"message":"105","line":16,"column":8,"nodeType":"94","messageId":"95","endLine":16,"endColumn":19},{"ruleId":"92","severity":1,"message":"106","line":17,"column":8,"nodeType":"94","messageId":"95","endLine":17,"endColumn":17},{"ruleId":"92","severity":1,"message":"107","line":18,"column":8,"nodeType":"94","messageId":"95","endLine":18,"endColumn":20},{"ruleId":"92","severity":1,"message":"108","line":19,"column":8,"nodeType":"94","messageId":"95","endLine":19,"endColumn":24},{"ruleId":"92","severity":1,"message":"109","line":45,"column":18,"nodeType":"94","messageId":"95","endLine":45,"endColumn":27},{"ruleId":"92","severity":1,"message":"110","line":47,"column":10,"nodeType":"94","messageId":"95","endLine":47,"endColumn":23},{"ruleId":"92","severity":1,"message":"96","line":47,"column":25,"nodeType":"94","messageId":"95","endLine":47,"endColumn":41},{"ruleId":"111","severity":1,"message":"112","line":65,"column":4,"nodeType":"113","endLine":65,"endColumn":13,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":92,"column":3,"nodeType":"113","endLine":92,"endColumn":5,"suggestions":"116"},{"ruleId":"92","severity":1,"message":"117","line":34,"column":10,"nodeType":"94","messageId":"95","endLine":34,"endColumn":24},{"ruleId":"92","severity":1,"message":"118","line":35,"column":22,"nodeType":"94","messageId":"95","endLine":35,"endColumn":36},{"ruleId":"92","severity":1,"message":"119","line":41,"column":23,"nodeType":"94","messageId":"95","endLine":41,"endColumn":37},{"ruleId":"92","severity":1,"message":"120","line":58,"column":10,"nodeType":"94","messageId":"95","endLine":58,"endColumn":23},{"ruleId":"92","severity":1,"message":"121","line":59,"column":10,"nodeType":"94","messageId":"95","endLine":59,"endColumn":24},{"ruleId":"92","severity":1,"message":"122","line":59,"column":25,"nodeType":"94","messageId":"95","endLine":59,"endColumn":43},{"ruleId":"111","severity":1,"message":"123","line":164,"column":3,"nodeType":"124","endLine":164,"endColumn":18,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":167,"column":29,"nodeType":"128","messageId":"129","endLine":167,"endColumn":31},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'setHeaderPopulated' is assigned a value but never used.","Identifier","unusedVar","'setSelectedClass' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'HomeIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'DnsRoundedIcon' is defined but never used.","'PermMediaOutlinedIcon' is defined but never used.","'TimerIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'activeLink' is assigned a value but never used.","'FormControl' is defined but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'CircularProgress' is defined but never used.","'setLoaded' is assigned a value but never used.","'selectedClass' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'classList'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook React.useEffect has a missing dependency: 'props.questionSet'. Either include it or remove the dependency array.",["133"],"'subjectDetails' is assigned a value but never used.","'setSubjectData' is assigned a value but never used.","'setSubjectList' is assigned a value but never used.","'readyToCancel' is assigned a value but never used.","'chpterInactive' is assigned a value but never used.","'setChapterInactive' is assigned a value but never used.","React Hook useEffect contains a call to 'setPreviousBoard'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [previousBoard, props.selectedBoard, cancelExamination] as a second argument to the useEffect Hook.","MemberExpression",["134"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [classList, loading]",{"range":"141","text":"142"},"Update the dependencies array to be: [props.questionSet]",{"range":"143","text":"144"},"Add dependencies array: [previousBoard, props.selectedBoard, cancelExamination]",{"range":"145","text":"146"},[2184,2193],"[classList, loading]",[3356,3358],"[props.questionSet]",[6183,6183],", [previousBoard, props.selectedBoard, cancelExamination]"]